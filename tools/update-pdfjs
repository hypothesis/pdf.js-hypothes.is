#!/bin/sh

set -eu

# This script fetches the latest build of PDF.js from the viewer demo
# page.
#
# See https://github.com/mozilla/pdf.js/wiki/Setup-pdf.js-in-a-website#from-examples
#
# To update PDF.js to the latest version:
#
# 1. Create a new branch and run this script. This will fetch the latest PDF.js
#    release and commit the changes.
# 2. Check that PDF annotation works as expected. See the project README for
#    steps to run this locally.

DEST_DIR=viewer/

# PDF.js comes in two flavors, one for modern browsers and one for older browsers,
# known as the "legacy" build.
#
# The versions supported by the legacy build are listed at
# https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions#which-browsers-are-supported
# and as of September 2021 these align closely with what the client supports
# (see https://github.com/hypothesis/client/issues/3744).
#
# `PREFIX` specifies the path to the legacy build in the extracted tarball.
PREFIX=legacy
PREFIX_DEPTH=2
COMPONENTS="$PREFIX/build $PREFIX/web $PREFIX/LICENSE"
ARCHIVE_PATH="pdfjs-website.tar"

if [ ! -f "$ARCHIVE_PATH" ]; then
  echo "PDF.js website archive \"$ARCHIVE_PATH\" not found."
  echo ""
  echo "Go to https://github.com/mozilla/pdf.js/actions/workflows/publish_website.yml,"
  echo "select the latest deployment and download the \"github-pages\" artifact."
  echo ""
  echo "Extract the \"website.tar\" file and rename to \"$ARCHIVE_PATH\"."
  exit 1
fi

echo "Extracting PDF.js website tarball..."
rm -rf $DEST_DIR
mkdir -p $DEST_DIR
tar -xf "$ARCHIVE_PATH" --directory $DEST_DIR --strip-components=$PREFIX_DEPTH $COMPONENTS

echo "Modifying extracted files..."
# Remove the check that the PDF being loaded is from the same origin as the
# viewer.
sed -i '' -e 's/HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)/true \/* Hypothesis *\//' $DEST_DIR/web/viewer.mjs

# Modify the viewer HTML page to load the Hypothesis client.
cp pdfjs-init.js $DEST_DIR/web/
sed -i '' -e 's/<\/head>/<script src="pdfjs-init.js"><\/script><\/head>/' $DEST_DIR/web/viewer.html

# Add a README to make it super-obvious that $DEST_DIR contains generated files which
# should not be manually edited.
cat <<END > $DEST_DIR/HYPOTHESIS-README.md
# Hypothesis README

This is a build of the PDF.js viewer auto-generated by tools/update-pdfjs.
END

echo "Reading PDF.js version..."
# Look for `const pdfjsVersion = '<VERSION>'` line in source and extract VERSION.
PDFJS_VERSION=$(grep pdfjsVersion $DEST_DIR/web/viewer.mjs | egrep -o '[0-9.]+')

echo "Found PDF.js version $PDFJS_VERSION."
echo "Committing changes..."

git add $DEST_DIR
git commit -m "Update PDF.js to v$PDFJS_VERSION

Update PDF.js using $0."
